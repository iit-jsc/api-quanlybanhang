generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model GroupRole {
  name  String
  code  String @id
  roles Role[]
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String
  code        String
  groupCode   String
  groupRole   GroupRole    @relation(fields: [groupCode], references: [code])
  permissions Permission[]
}

model BusinessType {
  id          Int      @id @default(autoincrement())
  name        String
  icon        String?
  code        String
  description String?  @db.Text
  isPublic    Boolean? @default(true)
  shops       Shop[]
}

model Permission {
  id          Int       @id @default(autoincrement())
  name        String
  description String?   @db.Text
  roles       Role[]
  branches    Branch[]
  accounts    Account[]
  isPublic    Boolean?  @default(true)
  createdBy   Int?
  updatedBy   Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Account {
  id           Int           @id @default(autoincrement())
  status       Int           @default(1)
  type         Int
  username     String?
  password     String
  userId       Int
  user         User          @relation(fields: [userId], references: [id])
  isPublic     Boolean?      @default(true)
  createdBy    Int?
  updatedBy    Int?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  activityLogs ActivityLog[]
  permissions  Permission[]
  createdUsers User[]        @relation("createdByRelation")
  updatedUsers User[]        @relation("updatedByRelation")
  createOrders Order[]       @relation("createdByRelation")
  updateOrders Order[]       @relation("updatedByRelation")
}

model User {
  id                Int                @id @default(autoincrement())
  name              String
  code              String?
  phone             String
  email             String?
  photoURL          String?            @db.Text
  address           String?            @db.Text
  cardId            String?
  cardDate          DateTime?
  cardAddress       String?
  birthday          DateTime?
  sex               Int?
  startDate         DateTime?
  accounts          Account[]
  employeeGroupId   Int?
  employeeGroup     EmployeeGroup?     @relation(fields: [employeeGroupId], references: [id])
  isPublic          Boolean?           @default(true)
  createdBy         Int?
  updatedBy         Int?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  staffRatings      StaffRating[]
  employeeSchedules EmployeeSchedule[]
  timeSheets        TimeSheet[]
  branches          Branch[]
  createdByAccount  Account?           @relation("createdByRelation", fields: [createdBy], references: [id])
  updatedByAccount  Account?           @relation("updatedByRelation", fields: [updatedBy], references: [id])
}

model EmployeeGroup {
  id          Int      @id @default(autoincrement())
  name        String
  description String?  @db.Text
  users       User[]
  branches    Branch[]
  isPublic    Boolean? @default(true)
  createdBy   Int?
  updatedBy   Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Shop {
  id             Int            @id @default(autoincrement())
  code           String         @unique
  businessTypeId Int
  businessType   BusinessType?  @relation(fields: [businessTypeId], references: [id])
  name           String
  photoURL       String?        @db.Text
  domain         String?
  isPublic       Boolean?       @default(true)
  createdBy      Int?
  updatedBy      Int?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  branches       Branch[]
  pointSettings  PointSetting[]
  customerTypes  CustomerType[]
  customers      Customer[]
}

model PrintTemplate {
  id             Int      @id @default(autoincrement())
  type           Int
  name           String
  content        String?  @db.Text
  description    String?  @db.Text
  isShopTemplate Boolean
  isPublic       Boolean? @default(true)
  createdBy      Int?
  updatedBy      Int?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  branches       Branch[]
}

model CurrencyUnit {
  id         Int      @id @default(autoincrement())
  identifier String
  name       String
  code       String
  isUsed     Boolean  @default(false)
  branches   Branch?  @relation(fields: [branchId], references: [id])
  branchId   Int?
  isPublic   Boolean? @default(true)
  createdBy  Int?
  updatedBy  Int?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model MeasurementUnit {
  id        Int       @id @default(autoincrement())
  name      String
  code      String
  branches  Branch[]
  isPublic  Boolean?  @default(true)
  createdBy Int?
  updatedBy Int?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model ActivityLog {
  id               Int      @id @default(autoincrement())
  tableName        String
  accountId        Int
  type             Int
  affectedRecordId Int?
  branchId         Int
  createdBy        Int?
  createdAt        DateTime @default(now())
  account          Account  @relation(fields: [accountId], references: [id])
  branch           Branch   @relation(fields: [branchId], references: [id])
}

model ProductType {
  id                     Int                     @id @default(autoincrement())
  identifier             String
  branchId               Int
  branch                 Branch                  @relation(fields: [branchId], references: [id])
  name                   String
  description            String                  @db.Text
  isPublic               Boolean?                @default(true)
  createdBy              Int?
  updatedBy              Int?
  createdAt              DateTime                @default(now())
  updatedAt              DateTime                @updatedAt
  products               Product[]
  otherAttributePatterns OtherAttributePattern[]

  @@unique([identifier, branchId, isPublic])
}

model OtherAttributePattern {
  id            Int         @id @default(autoincrement())
  branchId      Int
  productTypeId Int
  label         String
  amount        Int
  type          Int
  isPublic      Boolean?    @default(true)
  createdBy     Int?
  updatedBy     Int?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  branch        Branch      @relation(fields: [branchId], references: [id])
  productType   ProductType @relation(fields: [productTypeId], references: [id])
}

model Topping {
  id           Int           @id @default(autoincrement())
  identifier   String
  name         String
  description  String?
  photoURLs    Json?
  price        Float         @default(0)
  branchId     Int
  branch       Branch        @relation(fields: [branchId], references: [id])
  isPublic     Boolean?      @default(true)
  createdBy    Int?
  updatedBy    Int?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  orderDetails OrderDetail[]
}

model Product {
  id                      Int                      @id @default(autoincrement())
  identifier              String
  branchId                Int
  unitId                  Int
  productTypeId           Int
  name                    String
  sku                     String
  code                    String?
  price                   Float                    @default(0)
  description             String?                  @db.Text
  photoURLs               Json?
  otherAttributes         Json?
  isCombo                 Boolean                  @default(false)
  status                  Int?                     @default(1)
  isInitialStock          Boolean                  @default(false)
  isPublic                Boolean?                 @default(true)
  createdBy               Int?
  updatedBy               Int?
  createdAt               DateTime                 @default(now())
  updatedAt               DateTime                 @updatedAt
  branch                  Branch                   @relation(fields: [branchId], references: [id])
  measurementUnit         MeasurementUnit          @relation(fields: [unitId], references: [id])
  productType             ProductType              @relation(fields: [productTypeId], references: [id])
  comboProductItems       ComboProductItem[]
  stocks                  Stock[]
  deals                   Deal[]
  couponConditionProducts CouponConditionProduct[]
  couponProducts          CouponProduct[]
  orderDetails            OrderDetail[]

  @@unique([sku, branchId, isPublic])
  @@unique([code, branchId, isPublic])
  @@unique([identifier, branchId, isPublic])
}

model ComboProductItem {
  id        Int      @id @default(autoincrement())
  branchId  Int
  productId Int
  amount    Boolean
  isPublic  Boolean? @default(true)
  createdBy Int?
  updatedBy Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  branch    Branch   @relation(fields: [branchId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Stock {
  id            Int      @id @default(autoincrement())
  branchId      Int
  productId     Int
  capitalPrice  Float?
  totalQuantity Float?
  isPublic      Boolean? @default(true)
  createdBy     Int?
  updatedBy     Int?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  branch        Branch   @relation(fields: [branchId], references: [id])
  product       Product  @relation(fields: [productId], references: [id])
}

model CustomerType {
  id           Int        @id @default(autoincrement())
  name         String
  description  String?    @db.Text
  discount     Float?
  discountType Int?
  isPublic     Boolean?   @default(true)
  createdBy    Int?
  updatedBy    Int?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  shopId       Int
  shop         Shop       @relation(fields: [shopId], references: [id])
  customers    Customer[]
}

model Customer {
  id                  Int                 @id @default(autoincrement())
  name                String
  customerTypeId      Int?
  code                String?
  email               String?
  phone               String
  address             String?             @db.Text
  description         String?             @db.Text
  representativeName  String?
  representativePhone String?
  birthDay            DateTime?
  endow               Int?                @default(1)
  discount            Float?
  discountType        Int?
  sex                 Int?
  fax                 String?
  tax                 String?
  isPublic            Boolean?            @default(true)
  createdBy           Int?
  updatedBy           Int?
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  shopId              Int
  shop                Shop                @relation(fields: [shopId], references: [id])
  customerType        CustomerType?       @relation(fields: [customerTypeId], references: [id])
  orders              Order[]
  pointAccumulations  PointAccumulation[]
  pointRedemptions    PointRedemption[]

  @@unique([code, shopId, isPublic])
  @@unique([phone, shopId, isPublic])
}

model SupplierType {
  id          Int        @id @default(autoincrement())
  branchId    Int
  name        String
  description String?    @db.Text
  isPublic    Boolean?   @default(true)
  createdBy   Int?
  updatedBy   Int?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  branch      Branch     @relation(fields: [branchId], references: [id])
  suppliers   Supplier[]
}

model Supplier {
  id                  Int          @id @default(autoincrement())
  branchId            Int
  supplierName        String
  email               String?
  phone               String
  address             String?      @db.Text
  representativeName  String?
  representativePhone String?
  supplierTypeId      Int
  isPublic            Boolean?     @default(true)
  createdBy           Int?
  updatedBy           Int?
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  branch              Branch       @relation(fields: [branchId], references: [id])
  supplierType        SupplierType @relation(fields: [supplierTypeId], references: [id])
}

model Deal {
  id                 Int       @id @default(autoincrement())
  branchId           Int
  identifier         String
  name               String
  code               String?
  description        String?   @db.Text
  type               Int
  value              Float
  noEndDate          Boolean?
  discountAllProduct Boolean
  unlimitedNumber    Boolean
  isPublic           Boolean?  @default(true)
  createdBy          Int?
  updatedBy          Int?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  branch             Branch    @relation(fields: [branchId], references: [id])
  products           Product[]
  orders             Order[]
}

model Coupon {
  id                      Int                      @id @default(autoincrement())
  branchId                Int
  identifier              String
  name                    String
  code                    String?
  startDate               DateTime
  endDate                 DateTime?
  limitPerCoupon          Int
  limitPerCustomer        Int?
  nolimitPerCoupon        Boolean
  noEndDate               Boolean?
  description             String?                  @db.Text
  value                   Float
  typeCouponValue         Int
  typeCoupon              Int
  applyAllBranch          Boolean
  isPublic                Boolean?                 @default(true)
  createdBy               Int?
  updatedBy               Int?
  createdAt               DateTime                 @default(now())
  updatedAt               DateTime                 @updatedAt
  branch                  Branch                   @relation(fields: [branchId], references: [id])
  couponConditionProducts CouponConditionProduct[]
  couponProducts          CouponProduct[]
}

model CouponConditionProduct {
  id        Int      @id @default(autoincrement())
  branchId  Int
  couponId  Int
  productId Int
  amount    Int
  isPublic  Boolean? @default(true)
  createdBy Int?
  updatedBy Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  branch    Branch   @relation(fields: [branchId], references: [id])
  coupon    Coupon   @relation(fields: [couponId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model CouponProduct {
  id          Int      @id @default(autoincrement())
  branchId    Int
  couponId    Int
  productId   Int?
  amount      Int
  productName String?
  photoURL    String?  @db.Text
  isPublic    Boolean? @default(true)
  createdBy   Int?
  updatedBy   Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  branch      Branch   @relation(fields: [branchId], references: [id])
  coupon      Coupon   @relation(fields: [couponId], references: [id])
  product     Product? @relation(fields: [productId], references: [id])
}

model Order {
  id                         Int                        @id @default(autoincrement())
  branchId                   Int
  customerId                 Int?
  code                       String
  cancelReason               String?
  cancelDate                 DateTime?
  transactionId              String?
  note                       String?
  orderType                  Int
  paymentMethod              Int?
  isPaid                     Boolean?                   @default(false)
  orderStatus                Int
  isPublic                   Boolean?                   @default(true)
  createdBy                  Int?
  updatedBy                  Int?
  createdAt                  DateTime                   @default(now())
  updatedAt                  DateTime                   @updatedAt
  branch                     Branch                     @relation(fields: [branchId], references: [id])
  customer                   Customer?                  @relation(fields: [customerId], references: [id])
  orderDetails               OrderDetail[]
  deals                      Deal[]
  customerRequests           CustomerRequest[]
  orderRatings               OrderRating[]
  createdByAccount           Account?                   @relation("createdByRelation", fields: [createdBy], references: [id])
  updatedByAccount           Account?                   @relation("updatedByRelation", fields: [updatedBy], references: [id])
  pointRedemptions           PointRedemption[]
  pointAccumulationHistories PointAccumulationHistory[]

  @@unique([code, branchId])
}

model OrderDetail {
  id                Int                @id @default(autoincrement())
  branchId          Int
  orderId           Int?
  productId         Int
  toppingId         Int?
  amount            Float
  note              String?
  status            Int?               @default(1)
  productPrice      Float
  toppingPrice      Float?             @default(0)
  isPublic          Boolean?           @default(true)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  branch            Branch             @relation(fields: [branchId], references: [id])
  topping           Topping?           @relation(fields: [toppingId], references: [id])
  order             Order?             @relation(fields: [orderId], references: [id])
  product           Product            @relation(fields: [productId], references: [id])
  table             Table?             @relation(fields: [tableId], references: [id])
  tableId           Int?
  createdBy         Int?
  updatedBy         Int?
  tableTransactions TableTransaction[]
}

model TableTransaction {
  id           Int           @id @default(autoincrement())
  branchId     Int
  type         Int
  tableId      Int
  isPublic     Boolean?      @default(true)
  createdBy    Int?
  updatedBy    Int?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  branch       Branch        @relation(fields: [branchId], references: [id])
  table        Table         @relation(fields: [tableId], references: [id])
  orderDetails OrderDetail[]
}

model Area {
  id          Int      @id @default(autoincrement())
  branchId    Int
  name        String
  code        String?
  description String?  @db.Text
  photoURL    String?  @db.Text
  isPublic    Boolean? @default(true)
  createdBy   Int?
  updatedBy   Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  branch      Branch   @relation(fields: [branchId], references: [id])
  tables      Table[]

  @@unique([code, branchId, isPublic])
}

model Table {
  id                Int                @id @default(autoincrement())
  branchId          Int
  areaId            Int
  name              String
  code              String?
  photoURL          String?            @db.Text
  description       String?            @db.Text
  orderDetails      OrderDetail[]
  isPublic          Boolean?           @default(true)
  createdBy         Int?
  updatedBy         Int?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  branch            Branch             @relation(fields: [branchId], references: [id])
  area              Area               @relation(fields: [areaId], references: [id])
  tableTransactions TableTransaction[]

  @@unique([code, branchId, isPublic])
}

model DiscountIssue {
  id                   Int            @id @default(autoincrement())
  identifier           String
  branchId             Int
  name                 String
  code                 String?
  discountType         Int
  discountValue        Float
  startDay             DateTime
  endDay               DateTime?
  noEndDay             Boolean?
  description          String?        @db.Text
  limitPerCode         Int
  limitPerCustomer     Int
  noLimitPerCode       Boolean
  noLimitCustomer      Boolean
  applyAllBranch       Boolean
  otherDiscountApplied Boolean
  minTotalOrder        Float?
  isPublic             Boolean?       @default(true)
  createdBy            Int?
  updatedBy            Int?
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
  branch               Branch         @relation(fields: [branchId], references: [id])
  discountCodes        DiscountCode[]
}

model DiscountCode {
  id              Int           @id @default(autoincrement())
  branchId        Int
  code            String
  discountIssueId Int
  quantityUsed    Int
  isPublic        Boolean?      @default(true)
  createdBy       Int?
  updatedBy       Int?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  branch          Branch        @relation(fields: [branchId], references: [id])
  discountIssue   DiscountIssue @relation(fields: [discountIssueId], references: [id])
}

model PointSetting {
  id        Int      @id @default(autoincrement())
  shopId    Int
  point     String
  value     Float
  pointType Int?
  isPublic  Boolean? @default(true)
  updatedBy Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  shop      Shop     @relation(fields: [shopId], references: [id])
}

model PointAccumulation {
  id         Int      @id @default(autoincrement())
  branchId   Int
  customerId Int
  point      Float
  isPublic   Boolean? @default(true)
  createdBy  Int?
  updatedBy  Int?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  branch     Branch   @relation(fields: [branchId], references: [id])
  customer   Customer @relation(fields: [customerId], references: [id])
}

model PointRedemption {
  id             Int      @id @default(autoincrement())
  branchId       Int
  customerId     Int
  orderId        Int
  pointToRedeem  Float
  amountRedeemed Float
  isPublic       Boolean? @default(true)
  createdBy      Int?
  updatedBy      Int?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  branch         Branch   @relation(fields: [branchId], references: [id])
  customer       Customer @relation(fields: [customerId], references: [id])
  order          Order    @relation(fields: [orderId], references: [id])
}

model PointAccumulationHistory {
  id        Int      @id @default(autoincrement())
  branchId  Int
  point     Float?
  orderId   Int
  isPublic  Boolean? @default(true)
  createdBy Int?
  updatedBy Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  branch    Branch   @relation(fields: [branchId], references: [id])
  order     Order    @relation(fields: [orderId], references: [id])
}

model CustomerRequest {
  id            Int      @id @default(autoincrement())
  branchId      Int
  orderId       Int
  requestType   Int
  requestDetail String
  isPublic      Boolean? @default(true)
  createdBy     Int?
  updatedBy     Int?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  branch        Branch   @relation(fields: [branchId], references: [id])
  order         Order    @relation(fields: [orderId], references: [id])
}

model OrderRating {
  id          Int      @id @default(autoincrement())
  branchId    Int
  orderId     Int
  ratingValue Int
  comment     String
  isPublic    Boolean? @default(true)
  createdBy   Int?
  updatedBy   Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  branch      Branch   @relation(fields: [branchId], references: [id])
  order       Order?   @relation(fields: [orderId], references: [id])
}

model StaffRating {
  id          Int      @id @default(autoincrement())
  branchId    Int
  ratingValue Int
  userId      Int
  comment     String
  isPublic    Boolean? @default(true)
  createdBy   Int?
  updatedBy   Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  branch      Branch   @relation(fields: [branchId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
}

model Branch {
  id                         Int                        @id @default(autoincrement())
  shopId                     Int
  shop                       Shop?                      @relation(fields: [shopId], references: [id])
  photoURL                   String?                    @db.Text
  name                       String
  address                    String?                    @db.Text
  status                     Int?
  isPublic                   Boolean?                   @default(true)
  createdBy                  Int?
  updatedBy                  Int?
  createdAt                  DateTime                   @default(now())
  updatedAt                  DateTime                   @updatedAt
  printTemplates             PrintTemplate[]
  currencyUnits              CurrencyUnit[]
  measurementUnits           MeasurementUnit[]
  activityLogs               ActivityLog[]
  productTypes               ProductType[]
  products                   Product[]
  comboProductItems          ComboProductItem[]
  stocks                     Stock[]
  supplierTypes              SupplierType[]
  suppliers                  Supplier[]
  deals                      Deal[]
  coupons                    Coupon[]
  couponConditionProducts    CouponConditionProduct[]
  couponProducts             CouponProduct[]
  orders                     Order[]
  areas                      Area[]
  discountIssues             DiscountIssue[]
  discountCodes              DiscountCode[]
  pointAccumulations         PointAccumulation[]
  pointRedemptions           PointRedemption[]
  pointAccumulationHistories PointAccumulationHistory[]
  orderDetails               OrderDetail[]
  customerRequests           CustomerRequest[]
  orderRatings               OrderRating[]
  staffRatings               StaffRating[]
  workShifts                 WorkShift[]
  employeeSchedules          EmployeeSchedule[]
  timeSheets                 TimeSheet[]
  salaries                   Salary[]
  tableTransactions          TableTransaction[]
  otherAttributePatterns     OtherAttributePattern[]
  tables                     Table[]
  permissions                Permission[]
  employeeGroups             EmployeeGroup[]
  users                      User[]
  toppings                   Topping[]
}

model WorkShift {
  id                Int                @id
  branchId          Int
  name              String
  startTime         String
  endTime           String
  isPublic          Boolean?           @default(true)
  createdBy         Int?
  updatedBy         Int?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  branch            Branch             @relation(fields: [branchId], references: [id])
  employeeSchedules EmployeeSchedule[]
}

model EmployeeSchedule {
  id          Int       @id
  branchId    Int
  employeeId  Int
  workShiftId Int
  date        DateTime
  isPublic    Boolean?  @default(true)
  createdBy   Int?
  updatedBy   Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  branch      Branch    @relation(fields: [branchId], references: [id])
  employee    User      @relation(fields: [employeeId], references: [id])
  workShift   WorkShift @relation(fields: [workShiftId], references: [id])
}

model TimeSheet {
  id         Int       @id
  branchId   Int
  employeeId Int
  checkIn    DateTime?
  checkOut   DateTime?
  date       DateTime?
  isPublic   Boolean?  @default(true)
  createdBy  Int?
  updatedBy  Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  branch     Branch    @relation(fields: [branchId], references: [id])
  employee   User      @relation(fields: [employeeId], references: [id])
}

model Salary {
  id          Int      @id
  branchId    Int
  baseSalary  Float
  hourlyRate  Float
  dailyRate   Float
  weeklyRate  Float
  monthlyRate Float
  isPublic    Boolean? @default(true)
  createdBy   Int?
  updatedBy   Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  branch      Branch   @relation(fields: [branchId], references: [id])
}
